version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - echo Installing Kubernetes dependencies...
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
  pre_build:
    commands:
      - echo "Entered the pre_build phase..."
      - echo "Logging in to Amazon ECR..."
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - services=('movies-service'
          'cinema-catalog-service'
          'booking-service'
          'payment-service'
          'notification-service'
          'api-gateway'
        )
      - echo Logging in to Amazon EKS...
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
  build:
    commands:
      - echo "Entered the build phase..."
      - for 
      - for service in "${services[@]}" do
          tag_name="$AWS_ACCOUNT_ID\.dkr\.ecr\.$AWS_DEFAULT_REGION\.amazonaws\.com/$IMAGE_REPO_NAME-$service:$ENV"
          echo "Building the Docker image $tag_name..."
          cd $service
          docker rm -f $tag_name
          docker rmi $tag_name
          docker image prune
          docker volume prune
          docker build -t $tag_name .
          cd ..
        done
  post_build:
    commands:
      - echo "Entered the post_build phase..."
          tag_name="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME-$service"
          echo "Pushing the Docker image $tag_name to ECR..."
          cd $service
          docker push $tag_name
          cd ..
          # kubectl apply -f deployment.yaml
        done


